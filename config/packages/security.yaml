security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\Utilisateur: 'auto'
        App\Entity\Administrateur: 'auto'  # Ajout du hash pour l'admin

    providers:
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email
        app_admin_provider:
            entity:
                class: App\Entity\Administrateur
                property: email

    firewalls:
        admin:
            pattern: ^/admin
            provider: app_admin_provider
            form_login:
                login_path: admin_login
                check_path: admin_login
                default_target_path: admin_dashboard  # Redirige après login réussi
            logout:
                path: admin_logout
                target: app_login
            access_denied_url: admin_login  # Si accès refusé, aller au login
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\UserAuthenticator
            logout:
                path: app_logout
                target: app_login  # Redirige vers login user

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true

    access_control:
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
